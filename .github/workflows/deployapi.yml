name: Build and Deploy MovieConnect API

on:
  push:
    branches: [ "main" ]

env:
  AZURE_WEBAPP_NAME: "movieconnectapi"

jobs:
  # Job 1: Build and Push Docker Image
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - name: Restore dependencies
      run: dotnet restore ./MovieConnect.API/MovieConnect.API.csproj

    - name: Build
      run: dotnet build ./MovieConnect.API/MovieConnect.API.csproj --configuration Release --no-restore

    - name: Run Unit Tests
      run: dotnet test ./MovieConnect.UnitTests/MovieConnect.UnitTests.csproj --configuration Release

    - name: Run Integration Tests
      run: dotnet test ./MovieConnect.IntegrationTests/MovieConnect.IntegrationTests.csproj --configuration Release

    - name: "Azure ACR login"
      uses: azure/docker-login@v1
      with:
        login-server: ${{ secrets.ACR_LOGIN_SERVER }}
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}

    - name: "Build and push docker image"
      id: docker_build
      uses: docker/build-push-action@v5
      with:
        push: true
        tags: ${{ secrets.ACR_LOGIN_SERVER }}/movieconnectapi:${{ github.run_id }}
        file: ./MovieConnect.API/Dockerfile

  # Job 2: Deploy to Azure Web App
  deploy:
    runs-on: ubuntu-latest
    needs: build 

    steps:
    - name: Deploy to Azure WebApp
      uses: azure/webapps-deploy@v2
      with:
        images: ${{ secrets.ACR_LOGIN_SERVER }}/movieconnectapi:${{ github.run_id }}
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        publish-profile: ${{ secrets.API_PUBLISH_SECRET }}
